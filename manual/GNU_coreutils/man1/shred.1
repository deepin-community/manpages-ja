.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.44.1.
.TH SHRED "1" "2016年2月" "GNU coreutils" "ユーザーコマンド"
.SH 名前
shred \- ファイルを上書きし、その内容が分からないようにする (追加でファイルの削除も可能)
.SH 書式
.B shred
[\fIOPTION\fR]... \fIFILE\fR...
.SH 説明
.\" Add any additional description here
.PP
指定されたファイルに対して上書きを繰り返し、非常に高価な機械でさえも
データ復元の為の調査を行うことが非常に困難となるようにします。
.PP
FILE に \- を指定した場合、標準出力に対して shred を行います。
.PP
長いオプションで必須となっている引数は短いオプションでも必須です。
.TP
\fB\-f\fR, \fB\-\-force\fR
書き込みができるように必要に応じてアクセス権限を変更する
.TP
\fB\-n\fR, \fB\-\-iterations\fR=\fIN\fR
N 回上書きを繰り返す (デフォルト: 3 回)
.TP
\fB\-\-random\-source\fR=\fIFILE\fR
ランダムバイトのソースを FILE にする
.TP
\fB\-s\fR, \fB\-\-size\fR=\fIN\fR
N で指定したバイト数 shred を行う (接尾辞として K, M, G など
が使用可能)
.TP
\fB\-u\fR, \fB\-\-remove\fR
上書き後にファイルを切り詰めと削除を行う
.HP
\fB\-\-remove\fR[=\fIHOW\fR]  \fB\-u\fR と同様だが、削除の方法を HOW で制御できる。下記参照
.TP
\fB\-v\fR, \fB\-\-verbose\fR
進行状況を表示する
.TP
\fB\-x\fR, \fB\-\-exact\fR
ブロックを満たすようにファイルサイズを切り上げない。通常
.IP
ファイル以外ではこれがデフォルトの動作
.TP
\fB\-z\fR, \fB\-\-zero\fR
shred を行ったことを隠すために最後に 0 で上書きする
.TP
\fB\-\-help\fR
この使い方を表示して終了する
.TP
\fB\-\-version\fR
バージョン情報を表示して終了する
.PP
\fB\-\-remove\fR (\fB\-u\fR) が指定されたときには FILE を削除します。
デフォルトではファイルを削除しません。
それは、 \fI/dev/hda\fP のようなデバイスファイルを操作するのが一般的であり、
それらのファイルは通常削除するべきではないためです。
通常ファイルを操作する時は、ほとんどの人が \fB\-\-remove\fR オプションを使用します。
オプションの HOW パラメーターは、
ディレクトリエントリーをどのように削除するかを指定します。
\&'unlink' => 標準の unlink コールを使用する。
\&'wipe' => それに加えて、最初に名前のバイトの難読化を行う。
\&'wipesync' => それに加えて、難読化した各バイトをディスクに sync する。
デフォルトモードは 'wipesync' ですが、この操作は非常に時間がかかります。
.PP
警告: shred は非常に重要な仮定に基づいていることに注意してください。
ファイルシステムはデータが存在する場所に上書きするということです。これ
は伝統的な方法ですが、近年設計された多くのファイルシステムではこの仮定
は満たされません。下記に挙げるのは shred があまり効果的では無いか、全て
のモードで shred が効果的であることを保証できないファイルシステムの例です。
.PP
* ログ構造またはジャーナリングファイルシステム。AIX や Solaris (および JFS,
.IP
ReiserFS, XFS, Ext3 など) で提供されている
.PP
* 冗長データを書き込み、数回の書き込み失敗が発生しても使用を続けられるファイル
.IP
システム。RAID ベースのファイルシステムなど
.PP
* Network Appliance の NFS サーバなどスナップショットを作成するファイルシステム
.PP
* 一時領域にキャッシュを作成するファイルシステム。 NFS バージョン 3
.IP
クライアントなど
.PP
* 圧縮ファイルシステム
.PP
ext3 ファイルシステムの場合は、上記の制限事項 (および shred の効果が限定的
になってしまうこと) は data=journal モードの時のみ発生します。このときは
メタデータに加えてファイルデータもジャーナルが行われます。 data=ordered
(デフォルト) および data=writeback モードの場合、shred は通常通り動作します。
ext3 のジャーナルモードは mount のオプションに data=... オプションを与える
ことによって変更されます。ファイルシステムのオプションは \fI/etc/fstab\fP ファイル
に記述されます。詳細はマニュアル (man mount) に記述されています。
.PP
加えて、ファイルシステムのバックアップおよびリモートミラーに削除できない
ファイルのコピーが含まれている場合があります。これにより shred したファイル
が後で復元できるかもしれません。
.PP
GNU coreutils のオンラインヘルプ: <http://www.gnu.org/software/coreutils/>
shred の翻訳に関するバグは <http://translationproject.org/team/ja.html> に連絡してください。
完全な文書は <http://www.gnu.org/software/coreutils/shred> にあります。
ローカルでは info '(coreutils) shred invocation' で参照できます。
.SH 作者
作者 Colin Plumb。
.SH 著作権
Copyright \(co 2016 Free Software Foundation, Inc.
ライセンス GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH 関連項目
.B shred
の完全なマニュアルは Texinfo マニュアルとして整備されている。もし、
.B info
および
.B shred
のプログラムが正しくインストールされているならば、コマンド
.IP
.B info shred
.PP
を使用すると完全なマニュアルを読むことができるはずだ。
